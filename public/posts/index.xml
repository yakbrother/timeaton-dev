<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Tim Eaton</title><link>http://example.org/posts/</link><description>Recent content in Posts on Tim Eaton</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 May 2023 08:12:22 +0200</lastBuildDate><atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Goodbye, Hospital</title><link>http://example.org/posts/leaving-the-hospital/</link><pubDate>Tue, 16 May 2023 08:12:22 +0200</pubDate><guid>http://example.org/posts/leaving-the-hospital/</guid><description>After hurting my leg, I’ve spent the last four months in the hospital with various complications after the initial surgery. It’s been a wild ride, with a lot of pain, boredom, and frustration.
As such, I’m happy to announce I’m finally going home this week! I’ll still be in a wheelchair, but it will be wonderful to be back in a familiar setting, mischievous cats and all. I’m setting up a new office in my main living space to cope with my limited mobility, and everything is working out so far.</description></item><item><title>Allonz-Y: Basic CSS Typography</title><link>http://example.org/posts/allonz-y-basic-typography/</link><pubDate>Sun, 14 May 2023 12:14:14 +0200</pubDate><guid>http://example.org/posts/allonz-y-basic-typography/</guid><description>Part of me appreciates Tailwind CSS. It’s easy to use, especially for layouts, but I think that “utility” approaches to CSS are a bit much sometimes. This is especially the case in rendering dynamic content - such as a blog or user-edited pages.
Even if I’m writing only static code, there really is nothing uglier than a long list of:
&amp;lt;p class=“text-base font-light leading-relaxed mt-0 mb-4 text-gray-400&amp;#34;&amp;gt;Paragraph one...&amp;lt;/p&amp;gt; &amp;lt;p class=“text-base font-light leading-relaxed mt-0 mb-4 text-gray-400&amp;#34;&amp;gt;Paragraph two.</description></item><item><title>Learning Go (golang): First Update</title><link>http://example.org/posts/learning-go-first-update/</link><pubDate>Sat, 29 Apr 2023 11:37:17 +0200</pubDate><guid>http://example.org/posts/learning-go-first-update/</guid><description>One of the problems I discovered since my last post is this: as a life-long programmer, it can be a little tough to learn a new language from scratch. After going through a few video tutorials on YouTube, Udemy, and ZTM, I leaned the basic types, syntax, and theory, but then I quickly tired of the projects. I actually wanted to argue about their structure, the same that I would do if I were planning a new feature at work.</description></item><item><title>Learning Go From a Hospital Bed</title><link>http://example.org/posts/learning-go-from-a-hospital-bed/</link><pubDate>Thu, 20 Apr 2023 13:31:37 +0200</pubDate><guid>http://example.org/posts/learning-go-from-a-hospital-bed/</guid><description>I’ve always been fascinated by Go - mostly because I watched people work on it in co-working spaces and they always seemed to have fun with their jobs. But never learned it or used it in my work. I figured - I’m stuck in a hospital bed. Why not go for it now?
First took a quick look at jobs in my area that wanted Go programmers, and there no lack of listings.</description></item><item><title>2023 So Far</title><link>http://example.org/posts/2023-so-far/</link><pubDate>Mon, 10 Apr 2023 23:11:13 +0000</pubDate><guid>http://example.org/posts/2023-so-far/</guid><description>Hi folks! I’ve decided to add a blog to my site, mostly to write about my continued learning process as a programmer (and to keep myself accountable during the process). My plan is to write about my thought process as I code day-to-day, along with fun tips I find along the way.
There’s no go way to put it - this year didn’t have a wonderful start. I was laid off from a long-time job, and had a bone infection that landed me the in the hospital for nearly four months.</description></item></channel></rss>